
PIRSensorInterfacing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800200  000003a2  00000416  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003a2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000044e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000480  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  000004c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001587  00000000  00000000  00000568  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000d2f  00000000  00000000  00001aef  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007a5  00000000  00000000  0000281e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000154  00000000  00000000  00002fc4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006ad  00000000  00000000  00003118  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000076d  00000000  00000000  000037c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  00003f32  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 ea       	ldi	r30, 0xA2	; 162
  fc:	f3 e0       	ldi	r31, 0x03	; 3
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 33       	cpi	r26, 0x38	; 56
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a8 e3       	ldi	r26, 0x38	; 56
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a8 33       	cpi	r26, 0x38	; 56
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	0e 94 8b 01 	call	0x316	; 0x316 <main>
 122:	0c 94 cf 01 	jmp	0x39e	; 0x39e <_exit>

00000126 <__bad_interrupt>:
 126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <lcd_port_config>:
}

//Function to initialize sensor
void pir_init()
{
	pir_port_config();
 12a:	87 b1       	in	r24, 0x07	; 7
 12c:	87 6f       	ori	r24, 0xF7	; 247
 12e:	87 b9       	out	0x07, r24	; 7
 130:	88 b1       	in	r24, 0x08	; 8
 132:	88 70       	andi	r24, 0x08	; 8
 134:	88 b9       	out	0x08, r24	; 8
 136:	08 95       	ret

00000138 <lcd_reset>:
 138:	86 e6       	ldi	r24, 0x66	; 102
 13a:	9e e0       	ldi	r25, 0x0E	; 14
 13c:	01 97       	sbiw	r24, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <lcd_reset+0x4>
 140:	00 00       	nop
 142:	40 98       	cbi	0x08, 0	; 8
 144:	41 98       	cbi	0x08, 1	; 8
 146:	80 e3       	ldi	r24, 0x30	; 48
 148:	88 b9       	out	0x08, r24	; 8
 14a:	42 9a       	sbi	0x08, 2	; 8
 14c:	ef ef       	ldi	r30, 0xFF	; 255
 14e:	f7 e4       	ldi	r31, 0x47	; 71
 150:	31 97       	sbiw	r30, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <lcd_reset+0x18>
 154:	00 c0       	rjmp	.+0      	; 0x156 <lcd_reset+0x1e>
 156:	00 00       	nop
 158:	42 98       	cbi	0x08, 2	; 8
 15a:	e6 e6       	ldi	r30, 0x66	; 102
 15c:	fe e0       	ldi	r31, 0x0E	; 14
 15e:	31 97       	sbiw	r30, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <lcd_reset+0x26>
 162:	00 00       	nop
 164:	40 98       	cbi	0x08, 0	; 8
 166:	41 98       	cbi	0x08, 1	; 8
 168:	88 b9       	out	0x08, r24	; 8
 16a:	42 9a       	sbi	0x08, 2	; 8
 16c:	ef ef       	ldi	r30, 0xFF	; 255
 16e:	f7 e4       	ldi	r31, 0x47	; 71
 170:	31 97       	sbiw	r30, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <lcd_reset+0x38>
 174:	00 c0       	rjmp	.+0      	; 0x176 <lcd_reset+0x3e>
 176:	00 00       	nop
 178:	42 98       	cbi	0x08, 2	; 8
 17a:	e6 e6       	ldi	r30, 0x66	; 102
 17c:	fe e0       	ldi	r31, 0x0E	; 14
 17e:	31 97       	sbiw	r30, 0x01	; 1
 180:	f1 f7       	brne	.-4      	; 0x17e <lcd_reset+0x46>
 182:	00 00       	nop
 184:	40 98       	cbi	0x08, 0	; 8
 186:	41 98       	cbi	0x08, 1	; 8
 188:	88 b9       	out	0x08, r24	; 8
 18a:	42 9a       	sbi	0x08, 2	; 8
 18c:	8f ef       	ldi	r24, 0xFF	; 255
 18e:	97 e4       	ldi	r25, 0x47	; 71
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <lcd_reset+0x58>
 194:	00 c0       	rjmp	.+0      	; 0x196 <lcd_reset+0x5e>
 196:	00 00       	nop
 198:	42 98       	cbi	0x08, 2	; 8
 19a:	e6 e6       	ldi	r30, 0x66	; 102
 19c:	fe e0       	ldi	r31, 0x0E	; 14
 19e:	31 97       	sbiw	r30, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <lcd_reset+0x66>
 1a2:	00 00       	nop
 1a4:	40 98       	cbi	0x08, 0	; 8
 1a6:	41 98       	cbi	0x08, 1	; 8
 1a8:	80 e2       	ldi	r24, 0x20	; 32
 1aa:	88 b9       	out	0x08, r24	; 8
 1ac:	42 9a       	sbi	0x08, 2	; 8
 1ae:	8f ef       	ldi	r24, 0xFF	; 255
 1b0:	97 e4       	ldi	r25, 0x47	; 71
 1b2:	01 97       	sbiw	r24, 0x01	; 1
 1b4:	f1 f7       	brne	.-4      	; 0x1b2 <lcd_reset+0x7a>
 1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <lcd_reset+0x80>
 1b8:	00 00       	nop
 1ba:	42 98       	cbi	0x08, 2	; 8
 1bc:	08 95       	ret

000001be <lcd_wr_command>:
 1be:	98 b1       	in	r25, 0x08	; 8
 1c0:	9f 70       	andi	r25, 0x0F	; 15
 1c2:	98 b9       	out	0x08, r25	; 8
 1c4:	98 b1       	in	r25, 0x08	; 8
 1c6:	28 2f       	mov	r18, r24
 1c8:	20 7f       	andi	r18, 0xF0	; 240
 1ca:	92 2b       	or	r25, r18
 1cc:	98 b9       	out	0x08, r25	; 8
 1ce:	40 98       	cbi	0x08, 0	; 8
 1d0:	41 98       	cbi	0x08, 1	; 8
 1d2:	42 9a       	sbi	0x08, 2	; 8
 1d4:	ef ef       	ldi	r30, 0xFF	; 255
 1d6:	f7 e4       	ldi	r31, 0x47	; 71
 1d8:	31 97       	sbiw	r30, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <lcd_wr_command+0x1a>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <lcd_wr_command+0x20>
 1de:	00 00       	nop
 1e0:	42 98       	cbi	0x08, 2	; 8
 1e2:	98 b1       	in	r25, 0x08	; 8
 1e4:	9f 70       	andi	r25, 0x0F	; 15
 1e6:	98 b9       	out	0x08, r25	; 8
 1e8:	98 b1       	in	r25, 0x08	; 8
 1ea:	82 95       	swap	r24
 1ec:	80 7f       	andi	r24, 0xF0	; 240
 1ee:	89 2b       	or	r24, r25
 1f0:	88 b9       	out	0x08, r24	; 8
 1f2:	40 98       	cbi	0x08, 0	; 8
 1f4:	41 98       	cbi	0x08, 1	; 8
 1f6:	42 9a       	sbi	0x08, 2	; 8
 1f8:	8f ef       	ldi	r24, 0xFF	; 255
 1fa:	97 e4       	ldi	r25, 0x47	; 71
 1fc:	01 97       	sbiw	r24, 0x01	; 1
 1fe:	f1 f7       	brne	.-4      	; 0x1fc <lcd_wr_command+0x3e>
 200:	00 c0       	rjmp	.+0      	; 0x202 <lcd_wr_command+0x44>
 202:	00 00       	nop
 204:	42 98       	cbi	0x08, 2	; 8
 206:	08 95       	ret

00000208 <lcd_init>:
 208:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_port_config>
 20c:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_reset>
 210:	86 e6       	ldi	r24, 0x66	; 102
 212:	9e e0       	ldi	r25, 0x0E	; 14
 214:	01 97       	sbiw	r24, 0x01	; 1
 216:	f1 f7       	brne	.-4      	; 0x214 <lcd_init+0xc>
 218:	00 00       	nop
 21a:	88 e2       	ldi	r24, 0x28	; 40
 21c:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 226:	86 e0       	ldi	r24, 0x06	; 6
 228:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 22c:	8e e0       	ldi	r24, 0x0E	; 14
 22e:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 232:	80 e8       	ldi	r24, 0x80	; 128
 234:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 238:	08 95       	ret

0000023a <lcd_wr_char>:
 23a:	98 b1       	in	r25, 0x08	; 8
 23c:	9f 70       	andi	r25, 0x0F	; 15
 23e:	98 b9       	out	0x08, r25	; 8
 240:	98 b1       	in	r25, 0x08	; 8
 242:	28 2f       	mov	r18, r24
 244:	20 7f       	andi	r18, 0xF0	; 240
 246:	92 2b       	or	r25, r18
 248:	98 b9       	out	0x08, r25	; 8
 24a:	40 9a       	sbi	0x08, 0	; 8
 24c:	41 98       	cbi	0x08, 1	; 8
 24e:	42 9a       	sbi	0x08, 2	; 8
 250:	ef ef       	ldi	r30, 0xFF	; 255
 252:	f7 e4       	ldi	r31, 0x47	; 71
 254:	31 97       	sbiw	r30, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <lcd_wr_char+0x1a>
 258:	00 c0       	rjmp	.+0      	; 0x25a <lcd_wr_char+0x20>
 25a:	00 00       	nop
 25c:	42 98       	cbi	0x08, 2	; 8
 25e:	98 b1       	in	r25, 0x08	; 8
 260:	9f 70       	andi	r25, 0x0F	; 15
 262:	98 b9       	out	0x08, r25	; 8
 264:	98 b1       	in	r25, 0x08	; 8
 266:	82 95       	swap	r24
 268:	80 7f       	andi	r24, 0xF0	; 240
 26a:	89 2b       	or	r24, r25
 26c:	88 b9       	out	0x08, r24	; 8
 26e:	40 9a       	sbi	0x08, 0	; 8
 270:	41 98       	cbi	0x08, 1	; 8
 272:	42 9a       	sbi	0x08, 2	; 8
 274:	8f ef       	ldi	r24, 0xFF	; 255
 276:	97 e4       	ldi	r25, 0x47	; 71
 278:	01 97       	sbiw	r24, 0x01	; 1
 27a:	f1 f7       	brne	.-4      	; 0x278 <lcd_wr_char+0x3e>
 27c:	00 c0       	rjmp	.+0      	; 0x27e <lcd_wr_char+0x44>
 27e:	00 00       	nop
 280:	42 98       	cbi	0x08, 2	; 8
 282:	08 95       	ret

00000284 <lcd_cursor>:
 284:	82 30       	cpi	r24, 0x02	; 2
 286:	71 f0       	breq	.+28     	; 0x2a4 <lcd_cursor+0x20>
 288:	18 f4       	brcc	.+6      	; 0x290 <lcd_cursor+0xc>
 28a:	81 30       	cpi	r24, 0x01	; 1
 28c:	31 f0       	breq	.+12     	; 0x29a <lcd_cursor+0x16>
 28e:	08 95       	ret
 290:	83 30       	cpi	r24, 0x03	; 3
 292:	69 f0       	breq	.+26     	; 0x2ae <lcd_cursor+0x2a>
 294:	84 30       	cpi	r24, 0x04	; 4
 296:	81 f0       	breq	.+32     	; 0x2b8 <lcd_cursor+0x34>
 298:	08 95       	ret
 29a:	8f e7       	ldi	r24, 0x7F	; 127
 29c:	86 0f       	add	r24, r22
 29e:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 2a2:	08 95       	ret
 2a4:	8f eb       	ldi	r24, 0xBF	; 191
 2a6:	86 0f       	add	r24, r22
 2a8:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 2ac:	08 95       	ret
 2ae:	83 e9       	ldi	r24, 0x93	; 147
 2b0:	86 0f       	add	r24, r22
 2b2:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 2b6:	08 95       	ret
 2b8:	83 ed       	ldi	r24, 0xD3	; 211
 2ba:	86 0f       	add	r24, r22
 2bc:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 2c0:	08 95       	ret

000002c2 <lcd_string>:
 2c2:	cf 93       	push	r28
 2c4:	df 93       	push	r29
 2c6:	ec 01       	movw	r28, r24
 2c8:	88 81       	ld	r24, Y
 2ca:	88 23       	and	r24, r24
 2cc:	31 f0       	breq	.+12     	; 0x2da <lcd_string+0x18>
 2ce:	21 96       	adiw	r28, 0x01	; 1
 2d0:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_wr_char>
 2d4:	89 91       	ld	r24, Y+
 2d6:	81 11       	cpse	r24, r1
 2d8:	fb cf       	rjmp	.-10     	; 0x2d0 <lcd_string+0xe>
 2da:	df 91       	pop	r29
 2dc:	cf 91       	pop	r28
 2de:	08 95       	ret

000002e0 <lcd_clear>:
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 2e6:	08 95       	ret

000002e8 <pir_port_config>:
 2e8:	ea e0       	ldi	r30, 0x0A	; 10
 2ea:	f1 e0       	ldi	r31, 0x01	; 1
 2ec:	80 81       	ld	r24, Z
 2ee:	8f 67       	ori	r24, 0x7F	; 127
 2f0:	80 83       	st	Z, r24
 2f2:	08 95       	ret

000002f4 <update_pir_sensor>:
}

//Function to get sensor digital data
bool update_pir_sensor()
{
	if(PINL == (1<<PINL7)) return true;
 2f4:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x700109>
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	90 38       	cpi	r25, 0x80	; 128
 2fc:	09 f0       	breq	.+2      	; 0x300 <update_pir_sensor+0xc>
 2fe:	80 e0       	ldi	r24, 0x00	; 0
	return false;
 300:	08 95       	ret

00000302 <port_init>:
}

//Function to initialize sensor
void pir_init()
{
	pir_port_config();
 302:	0e 94 74 01 	call	0x2e8	; 0x2e8 <pir_port_config>

//Function to initialize PORTS
void port_init()
{
	pir_init();
	lcd_init();
 306:	0e 94 04 01 	call	0x208	; 0x208 <lcd_init>
 30a:	08 95       	ret

0000030c <init_devices>:
}

//Function to initialize all devices
void init_devices (void)
{
	cli(); //Clears the global interrupts
 30c:	f8 94       	cli
	port_init();
 30e:	0e 94 81 01 	call	0x302	; 0x302 <port_init>
	sei();   //Enables the global interrupts
 312:	78 94       	sei
 314:	08 95       	ret

00000316 <main>:
}

int main(void)
{
	init_devices();
 316:	0e 94 86 01 	call	0x30c	; 0x30c <init_devices>
	
	lcd_cursor(1,3);
 31a:	63 e0       	ldi	r22, 0x03	; 3
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	0e 94 42 01 	call	0x284	; 0x284 <lcd_cursor>
	lcd_string("HACTOBER-2K19");
 322:	80 e0       	ldi	r24, 0x00	; 0
 324:	92 e0       	ldi	r25, 0x02	; 2
 326:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_string>
	lcd_cursor(2,4);
 32a:	64 e0       	ldi	r22, 0x04	; 4
 32c:	82 e0       	ldi	r24, 0x02	; 2
 32e:	0e 94 42 01 	call	0x284	; 0x284 <lcd_cursor>
	lcd_string("OPENSOURCE");
 332:	8e e0       	ldi	r24, 0x0E	; 14
 334:	92 e0       	ldi	r25, 0x02	; 2
 336:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_string>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 33a:	2f ef       	ldi	r18, 0xFF	; 255
 33c:	8f ef       	ldi	r24, 0xFF	; 255
 33e:	99 e5       	ldi	r25, 0x59	; 89
 340:	21 50       	subi	r18, 0x01	; 1
 342:	80 40       	sbci	r24, 0x00	; 0
 344:	90 40       	sbci	r25, 0x00	; 0
 346:	e1 f7       	brne	.-8      	; 0x340 <main+0x2a>
 348:	00 c0       	rjmp	.+0      	; 0x34a <main+0x34>
 34a:	00 00       	nop
	_delay_ms(2000);
	lcd_clear();
 34c:	0e 94 70 01 	call	0x2e0	; 0x2e0 <lcd_clear>
	
	lcd_cursor(2,5);
 350:	65 e0       	ldi	r22, 0x05	; 5
 352:	82 e0       	ldi	r24, 0x02	; 2
 354:	0e 94 42 01 	call	0x284	; 0x284 <lcd_cursor>
	lcd_string("DETECTED!");
 358:	89 e1       	ldi	r24, 0x19	; 25
 35a:	92 e0       	ldi	r25, 0x02	; 2
 35c:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_string>
	
	while (1)
	{
		//lcd_clear();
		
		if(update_pir_sensor())
 360:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <update_pir_sensor>
 364:	88 23       	and	r24, r24
 366:	49 f0       	breq	.+18     	; 0x37a <main+0x64>
		{
			lcd_cursor(1,4);
 368:	64 e0       	ldi	r22, 0x04	; 4
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	0e 94 42 01 	call	0x284	; 0x284 <lcd_cursor>
			lcd_string("  MOTION ");
 370:	83 e2       	ldi	r24, 0x23	; 35
 372:	92 e0       	ldi	r25, 0x02	; 2
 374:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_string>
 378:	08 c0       	rjmp	.+16     	; 0x38a <main+0x74>
		}
		else
		{
			lcd_cursor(1,4);
 37a:	64 e0       	ldi	r22, 0x04	; 4
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	0e 94 42 01 	call	0x284	; 0x284 <lcd_cursor>
			lcd_string("NO MOTION");
 382:	8d e2       	ldi	r24, 0x2D	; 45
 384:	92 e0       	ldi	r25, 0x02	; 2
 386:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_string>
 38a:	2f ef       	ldi	r18, 0xFF	; 255
 38c:	8f e7       	ldi	r24, 0x7F	; 127
 38e:	94 e0       	ldi	r25, 0x04	; 4
 390:	21 50       	subi	r18, 0x01	; 1
 392:	80 40       	sbci	r24, 0x00	; 0
 394:	90 40       	sbci	r25, 0x00	; 0
 396:	e1 f7       	brne	.-8      	; 0x390 <main+0x7a>
 398:	00 c0       	rjmp	.+0      	; 0x39a <main+0x84>
 39a:	00 00       	nop
 39c:	e1 cf       	rjmp	.-62     	; 0x360 <main+0x4a>

0000039e <_exit>:
 39e:	f8 94       	cli

000003a0 <__stop_program>:
 3a0:	ff cf       	rjmp	.-2      	; 0x3a0 <__stop_program>
